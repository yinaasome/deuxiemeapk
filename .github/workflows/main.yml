name: Build Android APK (Alternative)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Setup Java JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 31
        build-tools: 31.0.0
        ndk-version: 23.1.7779620

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache buildozer global directory
      uses: actions/cache@v3
      with:
        path: .buildozer_global
        key: buildozer-global-${{ hashFiles('buildozer.spec') }}

    - name: Cache buildozer directory
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: buildozer-${{ hashFiles('buildozer.spec') }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          python3-dev \
          ffmpeg \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev \
          zlib1g-dev \
          libgstreamer1.0-dev \
          gstreamer1.0-plugins-base \
          gstreamer1.0-plugins-good \
          autoconf \
          automake \
          libtool \
          pkg-config

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer
        pip install cython==0.29.33
        pip install wheel

    - name: Create main.py if needed
      run: |
        if [ ! -f main.py ]; then
          cp apk3.py main.py
        fi

    - name: Setup buildozer android directories
      run: |
        buildozer android p4a -- --help || true
        
        # Create necessary directories
        mkdir -p ~/.buildozer/android/platform
        
        # Link Android SDK for buildozer
        if [ ! -d ~/.buildozer/android/platform/android-sdk ]; then
          ln -sf $ANDROID_SDK_ROOT ~/.buildozer/android/platform/android-sdk
        fi

    - name: Set Android environment for buildozer
      run: |
        echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/23.1.7779620" >> $GITHUB_ENV

    - name: Accept Android licenses
      run: |
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses || true

    - name: Build APK with buildozer
      run: |
        # Build the APK
        buildozer android debug --verbose
      env:
        ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
        ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}

    - name: Verify APK was created
      run: |
        ls -la bin/
        file bin/*.apk || echo "No APK found"

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: mobile-money-debug-apk
        path: bin/*.apk
        if-no-files-found: error

    - name: Create Release on Tag
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: bin/*.apk
        name: Mobile Money v${{ github.ref_name }}
        body: |
          üì± **Mobile Money Application - Version ${{ github.ref_name }}**
          
          ### Nouvelles fonctionnalit√©s :
          - Gestion compl√®te des transactions Mobile Money
          - Interface agent et administrateur
          - Statistiques d√©taill√©es et exports
          - Base de donn√©es SQLite int√©gr√©e
          
          ### Installation :
          1. T√©l√©chargez le fichier APK
          2. Activez "Sources inconnues" dans Android
          3. Installez l'application
          
          ### Connexion par d√©faut :
          - **Administrateur** : `admin` / `admin123`
          
          ---
          Build automatique via GitHub Actions ‚ö°
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Cleanup on failure
      if: failure()
      run: |
        echo "Build failed, cleaning up..."
        rm -rf .buildozer/android/platform/build-*
        ls -la .buildozer/ || echo "No buildozer directory"
