name: Build Mobile Money App (AIDL Fixed)

on:
  push:
    branches: [ "main", "master" ]
    paths-ignore:
      - '*.md'
      - 'docs/**'
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 45  # ‚è±Ô∏è R√©duit le timeout

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1  # √âvite de t√©l√©charger tout l'historique

    - name: Get Date
      id: get-date
      run: echo "date=$(date -u '+%Y%m%d')" >> $GITHUB_OUTPUT

    - name: Cache Buildozer global directory
      uses: actions/cache@v4
      with:
        path: .buildozer_global
        key: buildozer-global-${{ hashFiles('buildozer.spec') }}-${{ steps.get-date.outputs.date }}
        restore-keys: |
          buildozer-global-${{ hashFiles('buildozer.spec') }}-
          buildozer-global-

    - name: Cache Buildozer directory
      uses: actions/cache@v4
      with:
        path: .buildozer
        key: ${{ runner.os }}-buildozer-${{ steps.get-date.outputs.date }}-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends \
          git zip unzip openjdk-8-jdk python3-pip \
          autoconf libtool pkg-config zlib1g-dev \
          libncurses5-dev libncursesw5-dev libtinfo5 \
          cmake libffi-dev libssl-dev \
          build-essential ccache m4 libc6-dev \
          libgmp-dev libmpfr-dev libmpc-dev

    - name: Set JAVA_HOME
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >> $GITHUB_ENV
        echo "/usr/lib/jvm/java-8-openjdk-amd64/bin" >> $GITHUB_PATH

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer==1.4.0 cython==0.29.33

    - name: Setup Android SDK manually
      run: |
        mkdir -p $HOME/android-sdk
        cd $HOME/android-sdk
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        unzip -q commandlinetools-linux-8512546_latest.zip
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/* cmdline-tools/latest/ 2>/dev/null || true
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH

    - name: Install Android SDK components
      run: |
        # Accepter les licences sans interaction
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses 2>/dev/null || true
        
        # Installer les composants n√©cessaires
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "platform-tools" --no_https
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "platforms;android-31" --no_https
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "build-tools;31.0.0" --no_https
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "ndk;25.2.9519653" --no_https
        
        # V√©rifier AIDL
        ls -la $ANDROID_HOME/build-tools/31.0.0/aidl || echo "AIDL not found"

    - name: Configure Buildozer environment
      run: |
        export BUILDOZER_GLOBAL_DIR=.buildozer_global
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        export ANDROID_NDK_ROOT=$ANDROID_HOME/ndk/25.2.9519653
        export NDK_PATH=$ANDROID_NDK_ROOT
        export PATH=$PATH:$ANDROID_SDK_ROOT/build-tools/31.0.0:$ANDROID_SDK_ROOT/platform-tools
        
        # Sauvegarder les variables d'environnement
        echo "BUILDOZER_GLOBAL_DIR=$BUILDOZER_GLOBAL_DIR" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "ANDROID_NDK_ROOT=$ANDROID_NDK_ROOT" >> $GITHUB_ENV
        echo "NDK_PATH=$NDK_PATH" >> $GITHUB_ENV
        
        # Afficher les informations de debug
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "JAVA_HOME: $JAVA_HOME"
        which aidl || echo "AIDL not in PATH"

    - name: Build with Buildozer
      run: |
        # üßπ Nettoyer les builds pr√©c√©dents
        buildozer android clean
        
        # üöÄ Build APK (sans interaction)
        timeout 35m buildozer -v android debug || {
          echo "Build failed or timed out"
          exit 1
        }

    - name: List built files
      run: |
        echo "üîç Recherche des fichiers APK..."
        find . -name "*.apk" -type f -exec ls -lh {} \;
        
        # V√©rifier les r√©pertoires possibles
        ls -la bin/ 2>/dev/null || echo "Pas de r√©pertoire bin/"
        find .buildozer -name "*.apk" -type f 2>/dev/null || echo "Pas d'APK dans .buildozer"

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: mobile-money-apk-${{ github.run_number }}
        path: |
          bin/*.apk
          .buildozer/android/platform/build-*/dists/*/bin/*.apk
        if-no-files-found: warn

    - name: Create Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}-mobile-money
        release_name: Mobile Money v${{ github.run_number }}
        body: |
          üöÄ **Mobile Money App - Version ${{ github.run_number }}**
          
          ‚ú® **Fonctionnalit√©s:**
          - Gestion des transactions mobile money
          - Base de donn√©es SQLite int√©gr√©e
          - Statistiques et rapports de transactions
          - Interface utilisateur intuitive
          - Correction du probl√®me de compilation AIDL
          
          üì± **Installation:**
          1. T√©l√©chargez le fichier APK
          2. Activez "Sources inconnues" dans les param√®tres Android
          3. Installez l'APK
          
          üîß **Corrections:**
          - Optimisation du workflow de build
          - Correction des timeouts infinis
          - Am√©lioration de la gestion des erreurs
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: bin/*.apk
        asset_name: mobile-money-v${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive
