name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache buildozer directories
      uses: actions/cache@v3
      with:
        path: |
          .buildozer
          .buildozer_global
        key: buildozer-${{ hashFiles('buildozer.spec') }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          python3-dev \
          ffmpeg \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev \
          zlib1g-dev \
          libgstreamer1.0 \
          gstreamer1.0-plugins-base \
          gstreamer1.0-plugins-good \
          openjdk-11-jdk \
          unzip \
          wget

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython==0.29.33

    - name: Set up Android SDK with NDK r25b
      run: |
        mkdir -p $HOME/.buildozer/android/platform
        cd $HOME/.buildozer/android/platform
        
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        unzip -q commandlinetools-linux-8512546_latest.zip
        mkdir -p android-sdk/cmdline-tools/latest
        mv cmdline-tools/* android-sdk/cmdline-tools/latest/
        rm -r cmdline-tools
        
        export ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
        
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
          "platform-tools" \
          "platforms;android-31" \
          "build-tools;31.0.0" \
          "ndk;25.1.8937393"

    - name: Set up environment variables
      run: |
        echo "ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$HOME/.buildozer/android/platform/android-sdk/ndk/25.1.8937393" >> $GITHUB_ENV
        echo "ANDROID_NDK=$HOME/.buildozer/android/platform/android-sdk/ndk/25.1.8937393" >> $GITHUB_ENV
        echo "ANDROID_NDK_PATH=$HOME/.buildozer/android/platform/android-sdk/ndk/25.1.8937393" >> $GITHUB_ENV
        echo "PATH=$HOME/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin:$HOME/.buildozer/android/platform/android-sdk/platform-tools:$PATH" >> $GITHUB_ENV

    - name: Create main.py if missing
      run: |
        if [ ! -f main.py ]; then
          cp apk3.py main.py
        fi

    - name: Fix SDK Manager paths (Buildozer legacy fallback)
      run: |
        mkdir -p $HOME/.buildozer/android/platform/android-sdk/tools/bin
        ln -sf $HOME/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin/sdkmanager $HOME/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager
        ln -sf $HOME/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin/avdmanager $HOME/.buildozer/android/platform/android-sdk/tools/bin/avdmanager

    - name: Check NDK Path (debug)
      run: |
        echo "ANDROID_NDK_PATH=$ANDROID_NDK_PATH"
        ls -l $ANDROID_NDK_PATH

    - name: Build APK with Buildozer
      run: |
        buildozer -v android debug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: bin/*.apk

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: bin/*.apk
        name: Release v${{ github.ref_name }}
        body: |
          ### Nouvelle version de l'application
          **Version:** ${{ github.ref_name }}
          
          ### Instructions
          1. Télécharger le fichier APK
          2. Activer "Sources inconnues"
          3. Installer l'application
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
