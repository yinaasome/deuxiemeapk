name: Build Mobile Money App

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.9'
  ANDROID_API_LEVEL: '33'
  ANDROID_BUILD_TOOLS: '33.0.0'
  ANDROID_NDK_VERSION: '25.2.9519653'
  BUILDOZER_SPEC_FILE: 'buildozer.spec'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip openjdk-17-jdk \
          python3-pip autoconf libtool \
          pkg-config zlib1g-dev libncurses5-dev \
          libncursesw5-dev libtinfo6 cmake \
          libffi-dev libssl-dev libltdl-dev \
          libxml2-dev libxslt-dev
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install --upgrade buildozer cython==0.29.33 kivy==2.3.0
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: ${{ env.ANDROID_API_LEVEL }}
        build-tools: ${{ env.ANDROID_BUILD_TOOLS }}
        ndk-version: ${{ env.ANDROID_NDK_VERSION }}
        cmake-version: '3.22.1'
        
    - name: Configure environment
      run: |
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/${{ env.ANDROID_NDK_VERSION }}" >> $GITHUB_ENV
        echo "PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV
        
    - name: Accept Android licenses
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        
    - name: Configure Buildozer
      run: |
        mkdir -p ~/.buildozer
        cat > ~/.buildozer/buildozer.spec <<EOL
        [buildozer]
        log_level = 2
        android.accept_sdk_license = True
        android.sdk_path = $ANDROID_HOME
        android.ndk_path = $ANDROID_NDK_HOME
        android.ant_path = /usr/share/ant
        android.maven_repo = https://maven.google.com
        android.maven_repo_backup = https://dl.google.com/dl/android/maven2
        android.api = ${{ env.ANDROID_API_LEVEL }}
        android.minapi = 21
        android.ndk_version = ${{ env.ANDROID_NDK_VERSION }}
        android.build_tools_version = ${{ env.ANDROID_BUILD_TOOLS }}
        EOL
        
    - name: Pre-download dependencies
      run: |
        # Pre-download common problematic packages
        wget https://python-for-android.googlecode.com/files/python3-3.9.1-armeabi-v7a.zip -O ~/.buildozer/android/packages/python3-3.9.1-armeabi-v7a.zip
        wget https://github.com/kivy/python-for-android/raw/develop/pythonforandroid/recipes/kivy/__init__.py -O ~/.buildozer/android/packages/kivy-2.3.0.zip
        
    - name: Build with Buildozer
      run: |
        # Clean previous builds
        rm -rf .buildozer/android/platform/build-*
        
        # Build with verbose output
        buildozer -v android debug 2>&1 | tee build.log
        
        # Check for errors
        if grep -q "Download failed" build.log; then
          echo "::error::Download failed during build process"
          cat build.log
          exit 1
        fi
        
    - name: Verify APK
      run: |
        APK_FILE=$(ls bin/*.apk 2>/dev/null | head -n 1)
        
        if [ -z "$APK_FILE" ]; then
          echo "::error::No APK file was generated!"
          echo "Build log contents:"
          cat build.log
          exit 1
        fi
        
        echo "Generated APK: $APK_FILE"
        echo "APK_PATH=$APK_FILE" >> $GITHUB_ENV
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: mobile-money-apk
        path: ${{ env.APK_PATH }}
