name: Build Mobile Money App

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.9'
  ANDROID_API_LEVEL: '33'
  ANDROID_BUILD_TOOLS: '33.0.0'
  ANDROID_NDK_VERSION: '23.2.8568313'  # Version connue pour fonctionner avec Buildozer
  BUILDOZER_SPEC_FILE: 'buildozer.spec'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip openjdk-17-jdk \
          python3-pip autoconf libtool \
          pkg-config zlib1g-dev libncurses5-dev \
          libncursesw5-dev libtinfo6 cmake \
          libffi-dev libssl-dev libltdl-dev
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install buildozer cython==0.29.33
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: ${{ env.ANDROID_API_LEVEL }}
        build-tools: ${{ env.ANDROID_BUILD_TOOLS }}
        ndk-version: ${{ env.ANDROID_NDK_VERSION }}
        
    - name: Configure environment
      run: |
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/${{ env.ANDROID_NDK_VERSION }}" >> $GITHUB_ENV
        echo "PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV
        
    - name: Accept Android licenses
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        
    - name: Build with Buildozer
      run: |
        # Vérifie que le fichier buildozer.spec existe
        if [ ! -f "${{ env.BUILDOZER_SPEC_FILE }}" ]; then
          echo "::error::Fichier ${{ env.BUILDOZER_SPEC_FILE }} non trouvé!"
          exit 1
        fi
        
        # Construction avec sortie verbose
        buildozer -v android debug
        
    - name: Verify APK
      run: |
        APK_FILE=$(ls bin/*.apk 2>/dev/null | head -n 1)
        
        if [ -z "$APK_FILE" ]; then
          echo "::error::Aucun fichier APK généré!"
          exit 1
        fi
        
        echo "APK généré: $APK_FILE"
        echo "APK_PATH=$APK_FILE" >> $GITHUB_ENV
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: mobile-money-apk
        path: ${{ env.APK_PATH }}
        
    - name: Create Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Mobile Money v${{ github.run_number }}
        body: |
          Nouvelle version de l'application Mobile Money
          
          **Changements:**
          - Gestion des opérations financières
          - Interface utilisateur améliorée
          - Base de données locale
          - Statistiques des transactions
          
          **Instructions d'installation:**
          1. Téléchargez le fichier APK ci-dessous
          2. Activez "Sources inconnues" dans Paramètres > Sécurité
          3. Installez l'APK téléchargé
        draft: false
        prerelease: false
        
    - name: Upload Release APK
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.APK_PATH }}
        asset_name: mobile-money-v${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive
