name: Build Mobile Money App (AIDL Fixed)

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 60  # ‚è±Ô∏è Limite d'ex√©cution √† 60 minutes

    steps:
    - uses: actions/checkout@v4

    - name: Get Date
      id: get-date
      run: echo "date=$(date -u '+%Y%m%d')" >> $GITHUB_OUTPUT

    - name: Cache Buildozer global directory
      uses: actions/cache@v4
      with:
        path: .buildozer_global
        key: buildozer-global-${{ hashFiles('buildozer.spec') }}-${{ steps.get-date.outputs.date }}
        restore-keys: |
          buildozer-global-${{ hashFiles('buildozer.spec') }}-
          buildozer-global-

    - name: Cache Buildozer directory
      uses: actions/cache@v4
      with:
        path: .buildozer
        key: ${{ runner.os }}-buildozer-${{ steps.get-date.outputs.date }}-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip openjdk-8-jdk python3-pip \
          autoconf libtool pkg-config zlib1g-dev \
          libncurses5-dev libncursesw5-dev libtinfo5 \
          cmake libffi-dev libssl-dev \
          build-essential ccache m4 libc6-dev \
          libgmp-dev libmpfr-dev libmpc-dev \
          libssl-dev libffi-dev wget

    - name: Set JAVA_HOME
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >> $GITHUB_ENV
        echo "/usr/lib/jvm/java-8-openjdk-amd64/bin" >> $GITHUB_PATH

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer==1.4.0 cython==0.29.33

    - name: Setup Android SDK manually
      run: |
        mkdir -p $HOME/android-sdk
        cd $HOME/android-sdk
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        unzip -q commandlinetools-linux-8512546_latest.zip
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/* cmdline-tools/latest/ 2>/dev/null || true
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH

    - name: Install Android SDK components
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "platform-tools"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "platforms;android-31"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "build-tools;31.0.0"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "ndk;25.2.9519653"
        ls -la $ANDROID_HOME/build-tools/31.0.0/aidl || echo "AIDL not found"

    - name: Build with Buildozer (with logs)
      run: |
        set -x  # üêû Trace toutes les commandes
        export BUILDOZER_GLOBAL_DIR=.buildozer_global
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        export ANDROID_NDK_ROOT=$ANDROID_HOME/ndk/25.2.9519653
        export NDK_PATH=$ANDROID_NDK_ROOT
        export PATH=$PATH:$ANDROID_SDK_ROOT/build-tools/31.0.0:$ANDROID_SDK_ROOT/platform-tools
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "JAVA_HOME: $JAVA_HOME"
        echo "PATH: $PATH"
        which aidl || echo "AIDL not in PATH"
        ls -la $ANDROID_HOME/build-tools/31.0.0/aidl || echo "AIDL binary not found"

        # üöß Build √©tape par √©tape
        buildozer android clean
        yes | buildozer -v android debug  # √©vite les blocages interactifs

    - name: List built files
      run: |
        find . -name "*.apk" -type f
        ls -la bin/ || echo "No bin directory found"

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: mobile-money-apk-fixed
        path: |
          bin/*.apk
          .buildozer/android/platform/build-*/dists/*/bin/*.apk
        if-no-files-found: warn

    - name: Create Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}-fixed
        release_name: Mobile Money v${{ github.run_number }} (AIDL Fixed)
        body: |
          New version of Mobile Money App with AIDL fix

          Features:
          - Mobile money transaction management
          - SQLite database integration
          - Transaction statistics and reports
          - User-friendly interface
          - Fixed AIDL compilation issue

          Installation:
          1. Download the APK file
          2. Enable "Unknown sources" in Android settings
          3. Install the APK
        draft: false
        prerelease: false
