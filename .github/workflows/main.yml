name: Construction Application Mobile Money

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

env:
  VERSION_PYTHON: '3.9'
  VERSION_ANDROID_API: '33'
  VERSION_BUILD_TOOLS: '33.0.0'
  VERSION_NDK: '25.2.9519653'

jobs:
  construction:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configurer Python ${{ env.VERSION_PYTHON }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.VERSION_PYTHON }}
    
    - name: Installer les dépendances système
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip openjdk-17-jdk \
          python3-pip autoconf libtool \
          pkg-config zlib1g-dev libncurses5-dev \
          libncursesw5-dev libtinfo6 cmake \
          libffi-dev libssl-dev libltdl-dev
        
    - name: Installer les dépendances Python
      run: |
        python -m pip install --upgrade pip wheel
        pip install --upgrade buildozer cython==0.29.33 kivy==2.3.0
        
    - name: Configurer Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: ${{ env.VERSION_ANDROID_API }}
        build-tools: ${{ env.VERSION_BUILD_TOOLS }}
        ndk-version: ${{ env.VERSION_NDK }}
        
    - name: Configurer l'environnement
      run: |
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/${{ env.VERSION_NDK }}" >> $GITHUB_ENV
        echo "PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV
        
    - name: Accepter les licences Android
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        
    - name: Préparer la configuration Buildozer
      run: |
        mkdir -p ~/.buildozer/android/packages
        cat > ~/.buildozer/default.cfg <<EOL
        [app]
        title = Orange Money
        package.name = orangemoney
        package.domain = org.orange
        version = 1.0
        requirements = python3==3.9.*,kivy==2.3.0
        android.api = ${{ env.VERSION_ANDROID_API }}
        android.minapi = 21
        android.ndk = ${{ env.VERSION_NDK }}
        android.sdk = ${{ env.VERSION_ANDROID_API }}
        android.build_tools = ${{ env.VERSION_BUILD_TOOLS }}
        android.arch = armeabi-v7a
        
        [buildozer]
        log_level = 2
        android.accept_sdk_license = True
        android.sdk_path = $ANDROID_HOME
        android.ndk_path = $ANDROID_NDK_HOME
        android.maven_repo = https://maven.google.com
        android.maven_repo_backup = https://dl.google.com/dl/android/maven2
        EOL
        
    - name: Construire l'APK avec Buildozer
      run: |
        buildozer -v android debug 2>&1 | tee build.log
        if grep -q "Download failed" build.log; then
          echo "::error::Échec de téléchargement pendant la construction"
          cat build.log
          exit 1
        fi
        
    - name: Vérifier l'APK généré
      run: |
        APK_FILE=$(ls bin/*.apk 2>/dev/null | head -n 1)
        if [ -z "$APK_FILE" ]; then
          echo "::error::Aucun APK généré!"
          cat build.log
          exit 1
        fi
        echo "APK généré: $APK_FILE"
        echo "APK_PATH=$APK_FILE" >> $GITHUB_ENV
        
    - name: Téléverser l'APK
      uses: actions/upload-artifact@v4
      with:
        name: orange-money-apk
        path: ${{ env.APK_PATH }}
